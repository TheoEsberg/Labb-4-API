// <auto-generated />
using Labb_4_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb_4_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"));

                    b.Property<string>("InterestDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");

                    b.HasData(
                        new
                        {
                            InterestId = 1,
                            InterestDescription = "Social Media Description",
                            InterestName = "Social Media"
                        },
                        new
                        {
                            InterestId = 2,
                            InterestDescription = "Music Description",
                            InterestName = "Music"
                        });
                });

            modelBuilder.Entity("API_Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"));

                    b.Property<int>("InterestId")
                        .HasColumnType("int");

                    b.Property<string>("LinkURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("LinkId");

                    b.HasIndex("InterestId");

                    b.HasIndex("PersonId");

                    b.ToTable("Links");

                    b.HasData(
                        new
                        {
                            LinkId = 1,
                            InterestId = 1,
                            LinkURL = "twitter.com",
                            PersonId = 1
                        },
                        new
                        {
                            LinkId = 2,
                            InterestId = 1,
                            LinkURL = "instagram.com",
                            PersonId = 1
                        },
                        new
                        {
                            LinkId = 3,
                            InterestId = 2,
                            LinkURL = "spotify.com",
                            PersonId = 2
                        },
                        new
                        {
                            LinkId = 4,
                            InterestId = 2,
                            LinkURL = "soundcloud.com",
                            PersonId = 2
                        },
                        new
                        {
                            LinkId = 5,
                            InterestId = 2,
                            LinkURL = "soundcloud.com",
                            PersonId = 1
                        });
                });

            modelBuilder.Entity("API_Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            PersonId = 2,
                            FirstName = "Sam",
                            LastName = "Andersson",
                            PhoneNumber = "555-5678"
                        });
                });

            modelBuilder.Entity("API_Models.Link", b =>
                {
                    b.HasOne("API_Models.Interest", "Interest")
                        .WithMany("Links")
                        .HasForeignKey("InterestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Models.Person", "Person")
                        .WithMany("Links")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interest");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("API_Models.Interest", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("API_Models.Person", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
